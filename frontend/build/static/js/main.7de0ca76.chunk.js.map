{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Paginate.js","components/Message.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","productUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Poduct","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","Message","children","Alert","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","listTopProducts","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","Product","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","loadingUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7de0ca76.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer\n} from './reducers/productReducers.js'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer\n} from './reducers/userReducers.js'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderDeliverReducer\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  productUpdate: productUpdateReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: { userInfo: userInfoFromStorage }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL\n} from '../constants/productConstants.js'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find(x => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map(x =>\n            x.product === existItem.product ? item : x\n          )\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item]\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_DATA = 'CART_SAVE_SHIPPING_DATA'\nexport const CART_SAVE_SHIPPING_ADDRESS ='CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD ='CART_SAVE_PAYMENT_METHOD'\n\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_RESET,\n  USER_DETAILS_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {}\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET\n} from '../constants/orderConstants.js'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    case ORDER_LIST_MY_RESET:\n      return {\n        orders: []\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_DETAILS_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nimport axios from 'axios'\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}/`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    })\n  }\n}\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = e => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type='text'\n        name='q'\n        onChange={e => setKeyword(e.target.value)}\n        placeholder='Search Products...'\n        className='mr-sm-2 ml-sm-5'\n      ></Form.Control>\n      <Button type='submit' variant='outline-success' className='p-2'>\n        Search\n      </Button>\n    </Form>\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\nimport SearchBox from './SearchBox'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>ProShop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n              <Row>\n                  <Col className=\"text-center py-3\">\n                   Copyriight &copy; Organic Beauty\n                  </Col>\n              </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n          style={{ color }}\n        />\n      </span>\n      <span>\n        <i\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n          style={{ color }}\n        />\n      </span>\n      <span>\n        <i\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n          style={{ color }}\n        />\n      </span>\n      <span>\n        <i\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n          style={{ color }}\n        />\n      </span>\n      <span>\n        <i\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n          style={{ color }}\n        />\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825'\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Rating from '../components/Rating'\n\n\nconst Poduct = ({ product }) => {\n\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} variant=\"top\" />\n            </Link>\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as=\"div\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n                <Card.Text as=\"div\">\n                    <Rating \n                        value={product.rating} \n                        text={`${product.numReviews} reviews`}\n                    />\n                </Card.Text>\n                <Card.Text as=\"h3\">\n                    ${product.price}\n                </Card.Text> \n            </Card.Body> \n            \n        </Card>\n    )\n}\n\nexport default Poduct\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, isAdmin = false, keyword = '' }) {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map(x => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message","import axios from 'axios'\nimport {\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL\n} from '../constants/productConstants'\nimport { logout } from './userActions'\n\nexport const listProducts = (\n  keyword = '',\n  pageNumber = ''\n) => async dispatch => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n    const { data } = await axios.get(`/api/products/${id}`)\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response\n    })\n  }\n}\n\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const updateProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    })\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const listTopProducts = (\n  keyword = '',\n  pageNumber = ''\n) => async dispatch => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector(state => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message />\n  ) : (\n    <Carousel pause='hover' className='bg-dark'>\n      {products.map(product => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product.id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className='carousel.caption'>\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n    title: 'Welcome to Organic Beauty',\n    keywords: 'organics, beauty, cosmetics, skin care',\n    description: 'We sell beauty products that have been produced ethically using organic ingredients'\n}\n\nexport default Meta","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader.js'\nimport Paginate from '../components/Paginate.js'\nimport ProductCarousel from '../components/ProductCarousel'\nimport Meta from '../components/Meta'\n\nimport Message from '../components/Message.js'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to='/' className='btn btn-light'>\n          Go Back\n        </Link>\n      )}\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map(product => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector(state => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview\n  } = productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n    }\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n  }, [dispatch, match, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={e => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(x => (\n                              <option key={x + 1} value={x + 1}>\n                                {x + 1}\n                              </option>\n                            ))}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map(review => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={e => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={e => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  })\n  localStorage.setItem('cartIems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => async(dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n\n}\n\nexport const savePaymentMethod = (data) => async(dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector(state => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = id => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart os empty <Link to='/'>Go back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map(item => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image\n                      src={item.image}\n                      alt={item.name}\n                      fluid\n                      rounded\n                    ></Image>\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={e =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map(x => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              <h2>\n                $\n                {cartItems\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\n                  .toFixed(2)}\n              </h2>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed to checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col} from 'react-bootstrap'\n\n\nfunction FormContainer({children}) {\n    return (\n       <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector(state => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector(state => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = e => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={e => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={e => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map(order => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\n\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST\n} from '../constants/orderConstants.js'\nimport { logout } from './userActions'\n\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector(state => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={e => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={e => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            required\n            onChange={e => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={e => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n            {/* <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","// import React, { useState, useEffect } from 'react'\n// import { Link } from 'react-router-dom'\n// import { Button, Row, Col, ListGroup, Card, Image } from 'react-bootstrap'\n// import { useDispatch, useSelector } from 'react-redux'\n// import Message from '../components/Message'\n// import CheckoutSteps from '../components/CheckoutSteps'\n// import { createOrder } from '../actions/orderActions'\n\n// function PlaceOrderScreen({ history }) {\n\n//     const dispatch = useDispatch()\n\n//    const cart = useSelector(state => state.cart)\n\n//    //calculate prices\n\n//     const addDecimals = (num) => {\n//        return (Math.round(num * 100) / 100).toFixed(2)\n//     }\n\n//    cart.itemsPrice = addDecimals(cart.cartItems.reduce(\n//        (acc, item) => acc + item.price * item.qty,\n//        0\n//    ))\n\n//    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 15)\n\n//    cart.taxPrice = addDecimals(Number((cart.itemsPrice * 0.15).toFixed(2)))\n\n//    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n//    const orderCreate = useSelector(state => state.orderCreate)\n//    const { order, success, error, } = orderCreate\n\n//    useEffect(() => {\n//        if(success) {\n//            history.push(`/order/${order._id}`)\n//        }\n//        // eslint-disable-next-line\n//    }, [history, success])\n\n//    const placeOrderHandler = () => {\n//        dispatch(\n//             createOrder({\n//                 orderItems: cart.cartItems,\n//                 shippingAddress: cart.shippingAddress,\n//                 paymentMethod: cart.paymentMethod,\n//                 itemsPrice: cart.itemsPrice,\n//                 shippingPrice: cart.shippingPrice,\n//                 taxPrice: cart.taxPrice,\n//                 totalPrice: cart.totalPrice,\n//               })\n//         )\n//    }\n\n//     return (\n//         <>\n//          <CheckoutSteps step1 step2 step3 step4/>\n//          <Row>\n//              <Col md={8}>\n//                 <ListGroup variant='flush'>\n//                     <ListGroup.Item>\n//                         <h2>Shipping</h2>\n//                         <p>\n//                             <strong>Address:</strong>\n//                             {cart.shippingAddress.address}, {cart.shippingAddress.city},\n//                             {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\n//                         </p>\n//                     </ListGroup.Item>\n//                     <ListGroup.Item>\n//                         <h2>Payment Method</h2>\n//                         <p>\n//                             <strong>Method: </strong>\n//                             {cart.paymentMethod}\n//                         </p>\n//                     </ListGroup.Item>\n//                     <ListGroup.Item>\n//                         <h2>Order Items</h2>\n//                         {cart.cartItems.length === 0\n//                           ?  <Message>Your cart is empty</Message>\n//                           : (\n//                             <ListGroup variant='flush'>\n//                                 {cart.cartItems.map((item, index) => (\n//                                     <ListGroup.Item key={index}>\n//                                     <Row>\n//                                         <Col md={1}>\n//                                         <Image\n//                                             src={item.image}\n//                                             alt={item.name}\n//                                             fluid\n//                                             rounded\n//                                         />\n//                                         </Col>\n//                                         <Col>\n//                                         <Link to={`/product/${item.product}`}>\n//                                             {item.name}\n//                                         </Link>\n//                                         </Col>\n//                                         <Col md={4}>\n//                                         {item.qty} x ${item.price} = ${item.qty * item.price}\n//                                         </Col>\n//                                     </Row>\n//                                     </ListGroup.Item>\n//                                 ))}\n//                             </ListGroup>\n//                           )}\n\n//                     </ListGroup.Item>\n//                 </ListGroup>\n//              </Col>\n//              <Col md={4}>\n//               <Card>\n//                   <ListGroup variant='flush'>\n//                       <ListGroup.Item>\n//                         <h2>Order Summary</h2>\n//                       </ListGroup.Item>\n//                       <ListGroup.Item>\n//                           <Row>\n//                               <Col>Items</Col>\n//                               <Col>${cart.itemsPrice}</Col>\n//                           </Row>\n//                       </ListGroup.Item>\n//                       <ListGroup.Item>\n//                           <Row>\n//                               <Col>Shipping</Col>\n//                               <Col>${cart.shippingPrice}</Col>\n//                           </Row>\n//                       </ListGroup.Item>\n//                       <ListGroup.Item>\n//                           <Row>\n//                               <Col>Tax</Col>\n//                               <Col>${cart.taxPrice}</Col>\n//                           </Row>\n//                       </ListGroup.Item>\n//                       <ListGroup.Item>\n//                           <Row>\n//                               <Col>Total</Col>\n//                               <Col>${cart.totalPrice}</Col>\n//                           </Row>\n//                       </ListGroup.Item>\n//                       <ListGroup.Item>\n//                          {error && <Message variant='danger'>{error}</Message>}\n//                       </ListGroup.Item>\n//                       <ListGroup.Item>\n//                           <Button\n//                             type='button'\n//                             className='btn-block'\n//                             disabled={cart.cartItems === 0 }\n//                             onClick={placeOrderHandler}\n//                           >Place Order</Button>\n//                       </ListGroup.Item>\n\n//                   </ListGroup>\n//               </Card>\n//              </Col>\n//          </Row>\n\n//         </>\n//     )\n// }\n\n// export default PlaceOrderScreen\n\nimport React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector(state => state.cart)\n\n  //   Calculate prices\n  const addDecimals = num => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector(state => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder\n} from '../actions/orderActions'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector(state => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector(state => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector(state => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = num => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, orderId, successPay, successDeliver, order])\n\n  const successPaymentHandler = paymentResult => {\n    console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector(state => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector(state => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo, successDelete])\n\n  const deleteHandler = (id, name) => {\n    if (window.confirm(`Are you sure you want to delete the user ${name}?`)) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map(user => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id, user.name)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector(state => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector(state => state.userUpdate)\n  const {\n    loading: loadingUdate,\n    error: errorUpdate,\n    user: successUpdate\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [user, dispatch, userId, successUpdate, history])\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userList' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={e => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isAdmin'>\n              <Form.Check\n                type='checkbox'\n                label='isAdmin'\n                checked={isAdmin}\n                onChange={e => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n  const dispatch = useDispatch()\n\n  const pageNumber = match.params.pageNumber\n\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productDelete = useSelector(state => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = productDelete\n\n  const productCreate = useSelector(state => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct\n  } = productCreate\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n    if (!userInfo.isAdmin) {\n      history.push('/login')\n    }\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber\n  ])\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  const deleteHandler = id => {\n    if (window.confirm(`Are you sure you want to delete the product`)) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map(product => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id, product.name)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector(state => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={e => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={e => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={e => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={e => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={e => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={e => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector(state => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map(order => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport { Container } from 'react-bootstrap'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store.js'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}